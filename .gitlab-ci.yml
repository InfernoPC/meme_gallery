stages:
  - build

variables:
  PROJECT_NAME: meme_gallery
  EMBED_PYTHON_ZIP: python-3.13.7-embed-amd64.zip
  EMBED_PYTHON_NAME: python-3.13.7-embed-amd64
  EMBED_PYTHON_URL: https://www.python.org/ftp/python/3.13.7/python-3.13.7-embed-amd64.zip

build_release:
  image: python:3.12-slim
  stage: build
  only:
    - tags
  script:
    - apt-get update && apt-get install -y unzip wget zip

    # 建立專案目錄
    - mkdir -p $PROJECT_NAME

    # 拷貝 requirements.txt
    - cp requirements.txt $PROJECT_NAME/

    # 建立臨時 venv 安裝套件
    - python -m venv temp_env
    - . temp_env/bin/activate
    - pip install --upgrade pip
    - pip install -r $PROJECT_NAME/requirements.txt

    # 下載 embed python zip
    - wget -O $EMBED_PYTHON_ZIP "$EMBED_PYTHON_URL"

    # 建立 embed python 資料夾
    - mkdir -p $PROJECT_NAME/$EMBED_PYTHON_NAME

    # 解壓 embed python 進資料夾
    - unzip $EMBED_PYTHON_ZIP -d $PROJECT_NAME/$EMBED_PYTHON_NAME

    # 確保 embed python 的 Lib 資料夾存在
    - mkdir -p $PROJECT_NAME/$EMBED_PYTHON_NAME/Lib/

    # 拷貝 temp_env/Lib/* 到 embed python 的 Lib/
    - cp -r temp_env/Lib/* $PROJECT_NAME/$EMBED_PYTHON_NAME/Lib/

    # 修改 python313._pth 啟用 import site
    - sed -i 's/^#import site/import site/' $PROJECT_NAME/$EMBED_PYTHON_NAME/python*._pth

    # 自動生成 start.bat
    - |
      cat > $PROJECT_NAME/start.bat <<'EOF'
      @echo off
      start "" "%~dp0$EMBED_PYTHON_NAME\pythonw.exe" "%~dp0main.py"
      exit
      EOF

    # 拷貝專案內容到 meme_gallery/
    - rsync -a ./ $PROJECT_NAME/

    # 打包成 release-<tag>.zip
    - zip -r release-${CI_COMMIT_TAG}.zip $PROJECT_NAME

  artifacts:
    paths:
      - release-${CI_COMMIT_TAG}.zip
